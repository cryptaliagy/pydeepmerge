name: release

on:
  push:
    branches:
      - master
    paths:
      - 'VERSION'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ['3.5', '3.6', '3.7', '3.8']
    name: Testing pydeepmerge with python ${{ matrix.python }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Install dependencies and script (python>=3.6)
        if: ${{ matrix.python != '3.5' }}
        run: pip install -e .[test]

      - name: Install dependencies and script (python==3.5)
        if: ${{ matrix.python == '3.5' }}
        run: pip install flake8 pytest pytest-cov mock && pip install -e .

      - name: Lint with flake8
        run: flake8

      - name: Test with pytest
        run: pytest

  release:
    needs: build
    runs-on: ubuntu-latest
    name: Releasing package
    env:
      TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
      TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Needed for changelog generation
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'

      - name: Install release packages
        run: pip install wheel gitchangelog pystache

      - name: Build release
        run: python setup.py sdist bdist_wheel

      - name: Extract version number
        run: echo "::set-env name=tag_version::$(cat VERSION)"

      - name: Extract wheel artifact name
        run: echo "::set-env name=wheel_name::$(echo dist/*.whl | sed 's/dist\///')"

      - name: Extract tar.gz artifact name
        run: echo "::set-env name=tar_name::$(echo dist/*.tar.gz | sed 's/dist\///')"

      - name: Pull tags from the repo
        run: git pull --tags

      - name: Make make a tag with the version number for changelog generation
        run: git tag $(cat VERSION)

      - name: Generate changelog
        run: gitchangelog > CHANGELOG.md

      - name: Clean up tag to make sure nothing conflicts on release
        run: git tag -d $(cat VERSION)

      - name: Make commit for auto-generated changelog
        uses: EndBug/add-and-commit@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          add: 'CHANGELOG.md'
          message: '!gitchangelog'

      - name: Make Github release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.tag_version }}
          release_name: Release ${{ env.tag_version }}
          draft: false
          prerelease: false
          body: PyDeepMerge release ${{ env.tag_version }}

      - name: Upload wheel release assets
        id: upload-release-wheel-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/${{ env.wheel_name }}
          asset_name: ${{ env.wheel_name }}
          asset_content_type: application/x-wheel+gzip

      - name: Upload tar release assets
        id: upload-release-tar-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/${{ env.tar_name }}
          asset_name: ${{ env.tar_name }}
          asset_content_type: application/gzip

      - name: Install Twine
        run: pip install twine

      - name: Release package
        run: twine upload dist/*
